---
- name: Create ISO image for ABI deployment
  hosts: localhost
  gather_facts: false

  tasks:
  - name: Resolve full absolute path of clusterDir (required by vsphere_copy)
    ansible.builtin.command:
      cmd: "readlink -f {{ clusterBaseDir|default('../clusters') }}/{{ name }}.{{ baseDomain }}"
    register: readlink

  - name: Store clusterDir in a fact
    ansible.builtin.set_fact: clusterDir="{{ readlink.stdout }}"

  - name: Include extra-manifests in the installation directory
    ansible.builtin.copy:
      src: "../inventories/extra_manifests/{{ item }}"
      dest: "{{ clusterDir }}/openshift/"
    loop: "{{ extra_manifests }}"
    when: extra_manifests is defined

  - name: Run openshift-install to generate the ISO file
    ansible.builtin.shell: "openshift-install --dir {{ clusterDir }} agent create image"

  - name: Delete previous ISO image to datastore
    community.vmware.vsphere_file:
      hostname: '{{ vcenter.hostname }}'
      username: '{{ vcenter.username }}'
      password: '{{ vcenter.password }}'
      validate_certs: no
      datacenter: "{{ vcenter.datacenter }}"
      datastore: "{{ item }}"
      path: "iso/{{ name }}-agent.x86_64.iso"
      state: absent
    with_items: "{{ vms | dict2items | selectattr('value.datastore', 'defined') | map(attribute='value.datastore') | list | unique }}"

  - name: Upload ISO image to datastore
    community.vmware.vsphere_copy:
      hostname: '{{ vcenter.hostname }}'
      username: '{{ vcenter.username }}'
      password: '{{ vcenter.password }}'
      validate_certs: no
      src: "{{ clusterDir }}/agent.x86_64.iso"
      datacenter: "{{ vcenter.datacenter }}"
      datastore: "{{ item }}"
      path: "iso/{{ name }}-agent.x86_64.iso"
    with_items: "{{ vms | dict2items | selectattr('value.datastore', 'defined') | map(attribute='value.datastore') | list | unique }}"
