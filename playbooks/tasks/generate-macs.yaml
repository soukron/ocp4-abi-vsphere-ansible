---
- name: Generate MAC addresses for all nodes
  ansible.builtin.set_fact:
    node_macs: "{{ node_macs | default({}) | combine({item|string: {}}) }}"
  with_sequence: start=0 end="{{ controlPlaneReplicas + computeReplicas - 1 }}"

- name: Generate base node networks
  ansible.builtin.set_fact:
    base_node_networks: "{{ base_node_networks | default([]) + [ { 'node_index': item, 'networks': (item|int < controlPlaneReplicas) | ternary(control_plane_networks, compute_networks | default([])) } ] }}"
  with_sequence: start=0 end="{{ controlPlaneReplicas + computeReplicas - 1 }}"

- name: Merge additional_networks into node_networks
  ansible.builtin.set_fact:
    node_networks: "{{ node_networks | default([]) + [ {
      'node_index': item.node_index,
      'hostname': 'node%02d.%s.%s' | format(item.node_index|int, name, baseDomain),
      'networks': item.networks + (templateOverrides.vms[('node%02d.%s.%s' | format(item.node_index|int, name, baseDomain))].additional_networks | default([]))
    } ] }}"
  loop: "{{ base_node_networks }}"

- name: Expand bond interfaces into individual network interfaces
  ansible.builtin.set_fact:
    expanded_networks: "{{ expanded_networks | default([]) + [ {
      'node_index': item.node_index,
      'hostname': item.hostname,
      'networks': item.networks | expand_bond_interfaces
    } ] }}"
  loop: "{{ node_networks }}"

- name: Debug expanded_networks
  ansible.builtin.debug:
    var: expanded_networks
    verbosity: 0

- name: Generate MAC addresses for each interface
  ansible.builtin.set_fact:
    node_macs: "{{ node_macs | combine({node_index|string: node_macs[node_index|string] | combine({interface.name: {'mac': mac_address | trim, 'network': network_name, 'device_type': 'vmxnet3', 'dhcp': interface.dhcp | default(false)}})}) }}"
  vars:
    node_index: "{{ item.0.node_index }}"
    interface: "{{ item.1 }}"
    hostname: "{{ 'node%02d.%s.%s' | format(node_index|int, name, baseDomain) }}"
    node_overrides: "{{ templateOverrides.vms[hostname] if templateOverrides.vms is defined and hostname in templateOverrides.vms else {} }}"
    interface_overrides: "{{ node_overrides.interfaces | selectattr('name', 'equalto', interface.name) | list | first if node_overrides.interfaces is defined else {} }}"
    network_name: "{{ (interface_overrides.network | default(interface.network)) }}"
    mac_address: >-
      {% if interface_overrides['mac-address'] is defined %}
      {{ interface_overrides['mac-address'] }}
      {% else %}
      {{ '00:50:56:' + ('%02x' | format(range(0, 64) | random)) + ':' + ('%02x' | format(range(0, 255) | random)) + ':' + ('%02x' | format(range(0, 255) | random)) }}
      {% endif %}
  with_subelements:
    - "{{ expanded_networks }}"
    - networks

- name: Debug node_macs
  ansible.builtin.debug:
    var: node_macs
    verbosity: 0