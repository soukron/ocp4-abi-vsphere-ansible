---
apiVersion: v1alpha1
kind: AgentConfig
metadata:
  name: {{ name }}
rendezvousIP: {{ rendezvousIP if rendezvousIP is defined else machineNetwork.firstIP }}
hosts:
{% for i in range(controlPlaneReplicas|int + computeReplicas|int) %}
{%- set hostname = "node%02d.%s.%s"|format(i, name, baseDomain) %}
{%- set networks = node_macs[i|string] %}
{%- set network_config = network_configs[hostname] if network_configs is defined and hostname in network_configs else {} %}
- hostname: {{ hostname }}
  role: {{ 'master' if i < controlPlaneReplicas|int else 'worker' }}
  interfaces:
{% if network_config and network_config.interfaces %}
{% for interface in network_config.interfaces %}
{% if interface['mac-address'] is defined %}
  - name: {{ interface.name }}
    macAddress: {{ interface['mac-address'] }}
{% endif %}
{% endfor %}
{% else %}
{% for name, network in networks.items() %}
  - name: {{ name }}
    macAddress: {{ network.mac }}
{% endfor %}
{% endif %}
  rootDeviceHints:
    deviceName: /dev/sda
  networkConfig:
{% if network_config %}
{% if network_config.interfaces %}
    interfaces:
{% for interface in network_config.interfaces %}
    - name: {{ interface.name }}
      type: {{ interface.type }}
      state: {{ interface.state }}
{% if interface['mac-address'] is defined %}
      mac-address: {{ interface['mac-address'] }}
{% endif %}
{% if interface['link-aggregation'] is defined %}
      link-aggregation:
        mode: {{ interface['link-aggregation'].mode }}
        options:
          miimon: {{ interface['link-aggregation'].options.miimon }}
        port:
{% for port in interface['link-aggregation'].port %}
        - {{ port }}
{% endfor %}
{% endif %}
      ipv4:
{% if interface.ipv4.address is defined %}
        enabled: true
        dhcp: false
        address:
{% if interface.ipv4.address is string %}
        - ip: {{ interface.ipv4.address }}
          prefix-length: {{ interface.ipv4['prefix-length'] | default(prefix) }}
{% else %}
{% for addr in interface.ipv4.address %}
        - ip: {{ addr.ip | default(addr) }}
          prefix-length: {{ addr['prefix-length'] | default(prefix) }}
{% endfor %}
{% endif %}
{% else %}
{% if interface.name not in (network_config.interfaces | selectattr('link-aggregation', 'defined') | map(attribute='link-aggregation') | map(attribute='port') | flatten) %}
        enabled: true
        dhcp: true
{% else %}
        enabled: false
        dhcp: false
{% endif %}
{% endif %}
      ipv6:
        enabled: false
{% endfor %}
{% endif %}
{% if network_config['dns-resolver'] is defined %}
    dns-resolver:
      config:
        server:
{% for dns_server in network_config['dns-resolver'].config.server %}
        - {{ dns_server }}
{% endfor %}
{% endif %}
{% if network_config.routes is defined and network_config.routes.config %}
    routes:
      config:
{% for route in network_config.routes.config %}
      - destination: {{ route.destination }}
        next-hop-address: {{ route['next-hop-address'] }}
        next-hop-interface: {{ route['next-hop-interface'] }}
{% endfor %}
{% endif %}
{% endif %}
{% endfor %}
